diff --git a/include/linux/swap.h b/include/linux/swap.h
index 4cc6ec3..48d5a8e 100644
--- a/include/linux/swap.h
+++ b/include/linux/swap.h
@@ -357,6 +357,8 @@ extern unsigned long zone_reclaimable_pages(struct zone *zone);
 extern unsigned long try_to_free_pages(struct zonelist *zonelist, int order,
 					gfp_t gfp_mask, nodemask_t *mask);
 extern bool __isolate_lru_page_prepare(struct page *page, isolate_mode_t mode);
+extern int request_reclaim_flusher_wakeup(void);
+extern unsigned long reclaim_page(struct page *page);
 extern unsigned long try_to_free_mem_cgroup_pages(struct mem_cgroup *memcg,
 						  unsigned long nr_pages,
 						  gfp_t gfp_mask,
diff --git a/mm/vmscan.c b/mm/vmscan.c
index 562e87c..04674e9 100644
--- a/mm/vmscan.c
+++ b/mm/vmscan.c
@@ -3746,6 +3746,7 @@ static int balance_pgdat(pg_data_t *pgdat, int order, int highest_zoneidx)
 	return sc.order;
 }
 
+//__reclaim_page.merge//
 /*
  * The pgdat->kswapd_highest_zoneidx is used to pass the highest zone index to
  * be reclaimed by kswapd from the waker. If the value is MAX_NR_ZONES which is
